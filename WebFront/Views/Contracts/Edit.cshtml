@model ContractViewModel
@using WebFront.Models.Account;
@using WebFront.Models.ContractType;
@using WebFront.Models.Contracts;
@using WebFront.Constants;
@using WebFront.Models.Departments;

<b>
    @(ViewData["Title"] = "Редактирование договора")
</b>
<br />

@using (var a = Html.BeginForm("Edit", "Contracts", FormMethod.Post))
{
    @Html.HiddenFor(m =>m.ParentContractID)

    if (Model.ParentContractID != null)
    {
        @Html.HiddenFor(c => c.UserId);
        @Html.HiddenFor(c => c.DepartmentID);
        @Html.HiddenFor(c => c.ContractTypeID);

        <table>
            <tr>
                <td>Идентификатор договора</td>
                <td>@Html.EditorFor(m =>m.ContractIdentifier)</td>
            </tr>
            <tr>
                <td>Дата заключения договора</td>
                <td><input type="date" name=@nameof(Model.ConclusionDate) value=@Model.ConclusionDate.ToString("yyyy-MM-dd") required></td>
            </tr>
            <tr>
                <td>Начало действия договора</td>
                <td><input type="date" name=@nameof(Model.PeriodStart) value=@Model.PeriodStart.ToString("yyyy-MM-dd") required></td>
            </tr>
        </table>
    }
    else
    {

        bool isAdmin = IncludeModels.UserIdentitiesTools.GetUserIsAdminClaimValue(User);
        IEnumerable<DepartmentViewModel>? departments = ViewBag.Departments;
        if (departments == null || !departments.Any())
        {
            throw new Exception("Departments is null or empty");
        }

        IEnumerable<ContractTypeViewModel>? contractTypes = ViewBag.ContractTypes;
        if (contractTypes == null || !contractTypes.Any())
        {
            throw new Exception("Departments is null or empty");
        }

        IEnumerable<UserViewModel> users = Enumerable.Empty<UserViewModel>();
        if (isAdmin)
        {
            users = ViewBag.Users;
            if (users == null || !users.Any())
            {
                throw new Exception("Departments is null or empty");
            }
        }
        else
        {
            <input type="hidden" name="UserID" value=@IncludeModels.UserIdentitiesTools.GetUserIDClaimValue(User)>
        }
        <table>
            <tr>
                @if (isAdmin)
                {
                    <td>Пользователь</td>
                    <td>
                        <select name="UserId">
                            @foreach (var u in users)
                            {
                                <option value=@u.ID>@u.NSP</option>
                            }
                        </select>
                    </td>
                }
                else
                {
                    <td><input type="hidden" name="UserID" value=@IncludeModels.UserIdentitiesTools.GetUserIDClaimValue(User)></td>
                }
            </tr>

            <tr>
                <td>Отдел</td>
                <td>
                    <select name=@nameof(Model.DepartmentID)>
                        @foreach (var d in departments)
                        {
                            <option value=@d.ID>@d.Name</option>
                        }
                    </select>
                </td>
            </tr>

            <tr>
                <td>Тип догвоора</td>
                <td>
                    <select name=@nameof(Model.ContractTypeID)>
                        @foreach (var d in contractTypes)
                        {
                            <option value=@d.ID>@d.Name</option>
                        }
                    </select>
                </td>
            </tr>


            <tr>
                <td>Идентификатор договора</td>
                <td>@Html.EditorFor(m =>m.ContractIdentifier)</td>
            </tr>
            <tr>
                <td>Дата заключения договора</td>
                <td><input type="date" name=@nameof(Model.ConclusionDate) required></td>
            </tr>
            <tr>
                <td>Начало действия договора</td>
                <td><input type="date" name=@nameof(Model.PeriodStart) value=@Model.PeriodStart.ToString("yyyy-MM-dd") required></td>
            </tr>
            <tr>
                <td>Конец действия договора</td>
                <td><input type="date" name=@nameof(Model.PeriodEnd) value=@Model.PeriodEnd.ToString("yyyy-MM-dd") required></td>
            </tr>
        </table>

    }

    @Html.HiddenFor(m =>m.Id)

    <table>
        <tr>
            <th class="brd">Лекции</th>
            <th class="brd">Практические занятия</th>
            <th class="brd">Лабораторные занятия</th>
            <th class="brd">Консультации</th>
            <th class="brd">Иное учебное занятие</th>
            <th class="brd">Зачеты</th>
            <th class="brd">Экзамены</th>
            <th class="brd">Курсовая работа, курсовой проект</th>
            <th class="brd">Собеседование</th>
            <th class="brd">Контрольная работа, реферат</th>
            <th class="brd">Стажировка</th>
            <th class="brd">Дипломный проект, дипломная работа</th>
            <th class="brd">Рецензирование дипломных проектов, работ, маг. диссертаций</th>
            <th class="brd">ГЭК</th>
            <th class="brd">Руководство магистрантами</th>
            <th class="brd">Учебная работа с аспирантами</th>
            <th class="brd">Демонстрация пластических поз</th>
            <th class="brd">Сопровождение тестирования</th>
        </tr>
        <tr>
            <td class="brd"><input type="number" name=@nameof(Model.LectionsTime) value=@Model.LectionsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.PracticalClassesTime) value=@Model.PracticalClassesTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.LaboratoryClassesTime) value=@Model.LaboratoryClassesTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.ConsultationsTime) value=@Model.ConsultationsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.OtherTeachingClassesTime) value=@Model.OtherTeachingClassesTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.CreditsTime) value=@Model.CreditsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.ExamsTime) value=@Model.ExamsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.CourseProjectsTime) value=@Model.CourseProjectsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.InterviewsTime) value=@Model.InterviewsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.TestsAndReferatsTime) value=@Model.TestsAndReferatsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.InternshipsTime) value=@Model.InternshipsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.DiplomasTime) value=@Model.DiplomasTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.DiplomasReviewsTime) value=@Model.DiplomasReviewsTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.SECTime) value=@Model.SECTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.GraduatesManagementTime) value=@Model.GraduatesManagementTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.GraduatesAcademicWorkTime) value=@Model.GraduatesAcademicWorkTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.PlasticPosesDemonstrationTime) value=@Model.PlasticPosesDemonstrationTime step="0.01" min="0"></td>
            <td class="brd"><input type="number" name=@nameof(Model.TestingEscortTime) value=@Model.TestingEscortTime step="0.01" min="0"></td>
        </tr>
    </table>
    <input type="submit" value="Подтвердить" />
}